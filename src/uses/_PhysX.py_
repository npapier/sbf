# SConsBuildFramework - Copyright (C) 2014, Nicolas Papier.
# Distributed under the terms of the GNU General Public License (GPL)
# as published by the Free Software Foundation.
# Author Nicolas Papier

### @todo update or remove
#def use_physx( self, lenv, elt ) :
	# Retrieves PHYSX_BASEPATH
#	physxBasePath = getPathFromEnv('PHYSX_BASEPATH')
#	if physxBasePath is None :
#		raise SCons.Errors.UserError("Unable to configure '%s'." % elt)

	# Sets CPPPATH
#	physxCppPath	=	[ 'SDKs\Foundation\include', 'SDKs\Physics\include', 'SDKs\PhysXLoader\include' ]
#	physxCppPath	+=	[ 'SDKs\Cooking\include', 'SDKs\NxCharacter\include' ]

#	if lenv.GetOption('weak_localext') :
#		for cppPath in physxCppPath :
#			lenv.AppendUnique( CCFLAGS = ['${INCPREFIX}' + os.path.join(physxBasePath, cppPath)] )
#	else :
#		for cppPath in physxCppPath :
#			lenv.AppendUnique( CPPPATH = os.path.join(physxBasePath, cppPath) )

	# Sets LIBS and LIBPATH
#	lenv.AppendUnique( LIBS = [	'PhysXLoader', 'NxCooking', 'NxCharacter' ] )
#	if self.myPlatform == 'win' :
#		lenv.AppendUnique( LIBPATH = [ os.path.join(physxBasePath, 'SDKs\lib\Win32') ] )
#	else :
#		raise SCons.Errors.UserError("Uses=[\'%s\'] not supported on platform %s." % (elt, self.myPlatform) )
