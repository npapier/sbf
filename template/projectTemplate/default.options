# project settings
#description		= ''
#productName		= ''
#vcsUse				= 'yes' # no
#defines			= []
type				= 'shared'	# exec, static, shared, none
#version			= '0-0'
#projectPostfix		= ''
#postfix			= ''
#generateInfoFile	= False
#deps				= []
#uses				= []
#libs				= []
#stdlibs			= []
#test				= 'none' # gtest
#shareExclude		= ['*.avi']
#shareBuild			= ([filters], ('command ${SOURCE} ${TARGET}', '${SOURCE}.encrypt', 'Encrypt $SOURCE.file') )
#customBuild		= { 'all' : customBuildForAll }
	#customBuildForAll = """import os
	#						print os.getenv('SCONS_BUILD_FRAMEWORK')
	#						print lenv.Dump()
	#						import myFile # a file name myFile.py in the directory of this project"""
#console			= True
#runParams			= []
#runTestParams		= []
#deploymentType		= 'none'
#deploymentPrecond	= 'standalone >= 1.0'
# first element have to be a standalone project, others have to be embedded project(s)
#nsis				= {	'autoUninstall'						: True,
#						'installDirFromRegKey'				: True,
#						'ensureNewInstallDir'				: False,
#						'actionOnVarDirectory'				: 'leave' | 'remove' | 'autoMigration' | 'manualMigration'
#						'moveLogFileIntoVarDirectory'		: False,
#						'copySetupFileIntoVarDirectory'		: False,
#						'customPointInstallationValidation'	: ''
#						}


#from src.sbfUses import UseRepository
#from Uses import Use_glm
#UseRepository.add( [Use_glm()] )

#and in Uses.py
#from src.sbfUses import IUse
#class Use_glm( IUse ):
#	def getName(self ):
#		return 'glm'
#
#	def getVersions( self ):
#		return [ '0-9-4-1', '0-9-3-4', '0-9-3-3', '0-8-4-1' ]
#
#	def hasRuntimePackage( self, version ):
#		return self.platform == 'posix'
