# sbf settings
#queryUser					= True
#numJobs					= 1
#decider					= 'fast'
#outputLineLength			= 79
#printCmdLine				= 'less'
#companyName				= ''
#pakPaths					= []

#svnUrls					= {
#	'displayDriverConnector'	: 'http://oglpp.googlecode.com/svn/displayDriverConnector/trunk',
#	'glContext'					: 'http://oglpp.googlecode.com/svn/glContext/trunk',
#	'gle'						: 'http://oglpp.googlecode.com/svn/gle/trunk',
#	'glo'	    				: 'http://oglpp.googlecode.com/svn/glo/trunk',
#	'vgsdk'						: 'http://vgsdk.googlecode.com/svn/trunk',
#	'SConsBuildFramework'		: 'http://sbf.googlecode.com/svn/trunk',
#	'' : [ 'svn://myServer/srv/svn/lib/{PROJECT}/trunk', 'svn://myServer/srv/svn/bin/{PROJECT}/trunk' ] }
#
# to authenticate check out the source code using your login:
#	'svn+ssh://login@myServer/srv/svn/lib/{PROJECT}/trunk' or
#	'https://vgsdk.googlecode.com/svn/trunk'
#
# to anonymously check out the source code:
#	'svn://myServer/srv/svn/lib/{PROJECT}/trunk'
#	'http://vgsdk.googlecode.com/svn/trunk'
#
# Advanced urls specifications to specify a revision and/or trunk/tags/branches
#	http://vgsdk.googlecode.com/svn/trunk/@567
#	http://vgsdk.googlecode.com/svn/tags/0-4
#	http://vgsdk.googlecode.com/svn/branches/0-5
#	svn://myServer/srv/svn/lib/{PROJECT}/trunk@3000
#	svn://myServer/srv/svn/lib/{PROJECT}/tags/0.2
#	svn://myServer/srv/svn/lib/{PROJECT}/branches/2.0@3058


#svnDefaultBranch			= '1.0'
#projectExclude				= [ '*/vgsdk*' ]
#weakLocalExtExclude		= []
#svnCheckoutExclude			= [ '*/vgsdk*' ]
#svnUpdateExclude			= [ '*/vgsdk*' ]
#targetArchitecture			= 'x86-32' | 'x86-64'
#clVersion					= 'highest'
#installPath				= ''
#postfixTimeFormat			= '%Y-%m-%d' # '%Hh%Mm%Ss'

# On windows platform
#publish on a local drive	:	publishPath = '/cygdrive/d/local/rsync/'
#publish on a network drive	:	publishPath = '/cygdrive/X/' for X:
#on a network drive			:	publishPath = 'npapier@remoteComputer:/home/npapier/tmp/rsync'
#publishPath				= ''
#publishOn					= False

#buildPath					= 'build'
#SConsignFilePath			= 'buildPath' or '~'
#cachePath					= ''
#cacheOn					= False
#config						= 'release' # debug or release : the default compilation mode.
#generateDebugInfoInRelease = False
#warningLevel				= 'normal'

#userDict					= {}
#from src.SConsBuildFramework import createBlowfishShareBuildCommand
#userDict = { 'blowfish' : createBlowfishShareBuildCommand( 'theKey' ) }
# or
#userDict = { 'blowfish' : ('command ${SOURCE} ${TARGET}', '${SOURCE}.encrypt', 'Encrypt $SOURCE.file') }
